lappend auto_path [pwd]/../
package require tcltest
package require conf

tcltest::test callback-1.0 {
	callback, ret 0
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 0
	}
	set ret [conf::load_from_file -hd . -cb confcb test.conf]
	return $ret
} -result {{k v g1 {k1 {1 2 {3 4}} k2 {test 2 3} g2 {g3 {k3 v3}} k4 v4} k5 v5} {k . g1 {k1 . k2 . g2 {g3 {k3 .}} k4 .} k5 .} {{k =S v} {{g1 k1} =L {1 2 {3 4}}} {{g1 k2} =L {test 2 3}} {{g1 g2 g3 k3} =S v3} {{g1 k4} =S v4} {k5 =S v5}}}

tcltest::test callback-1.0.1 {
	callback, ret 0 (from fh)
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 0
	}
	set fh [open test.conf]
	set ret [conf::load_from_fh -hd . -cb confcb $fh]
	close $fh
	return $ret
} -result {{k v g1 {k1 {1 2 {3 4}} k2 {test 2 3} g2 {g3 {k3 v3}} k4 v4} k5 v5} {k . g1 {k1 . k2 . g2 {g3 {k3 .}} k4 .} k5 .} {{k =S v} {{g1 k1} =L {1 2 {3 4}}} {{g1 k2} =L {test 2 3}} {{g1 g2 g3 k3} =S v3} {{g1 k4} =S v4} {k5 =S v5}}}

tcltest::test callback-1.0.2 {
	callback, ret 0 (from str)
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 0
	}
	set ret [conf::load_from_str -hd . -cb confcb {k = v g1 {k1 = [1 2 [3 4]] k2 = ["test" 2 3] g2.g3 { k3 = v3 } k4 = v4} k5 = v5}]
	return $ret
} -result {{k v g1 {k1 {1 2 {3 4}} k2 {test 2 3} g2 {g3 {k3 v3}} k4 v4} k5 v5} {k . g1 {k1 . k2 . g2 {g3 {k3 .}} k4 .} k5 .} {{k =S v} {{g1 k1} =L {1 2 {3 4}}} {{g1 k2} =L {test 2 3}} {{g1 g2 g3 k3} =S v3} {{g1 k4} =S v4} {k5 =S v5}}}

tcltest::test callback-1.1 {
	callback, ret 1
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 1
	}
	set ret [conf::load_from_file -hd . -cb confcb test.conf]
	return $ret
} -result {{} {} {{k =S v} {{g1 k1} =L {1 2 {3 4}}} {{g1 k2} =L {test 2 3}} {{g1 g2 g3 k3} =S v3} {{g1 k4} =S v4} {k5 =S v5}}}

tcltest::test callback-1.2 {
	callback, replace value
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		set vlist VAL
		return 0
	}
	set ret [conf::load_from_file -hd . -cb confcb test.conf]
	return $ret
} -result {{k VAL g1 {k1 VAL k2 VAL g2 {g3 {k3 VAL}} k4 VAL} k5 VAL} {k . g1 {k1 . k2 . g2 {g3 {k3 .}} k4 .} k5 .} {}}

tcltest::test callback-1.3 {
	callback, replace names and value
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		set names [list KEY]
		set vlist VAL
		return 0
	}
	set ret [conf::load_from_file -hd . -cb confcb test.conf]
	return $ret
} -result {{KEY VAL} {KEY .} {}}

tcltest::test callback-1.4 {
	callback, init priv
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		lset names end "K[dict get $ctx priv]"
		dict incr ctx priv
		set vlist VAL
		return 0
	}
	set ret [conf::load_from_file -hd . -cb {confcb 17} test.conf]
	return $ret
} -result {{K17 VAL g1 {K18 VAL K19 VAL g2 {g3 {K20 VAL}} K21 VAL} K22 VAL} {K17 . g1 {K18 . K19 . g2 {g3 {K20 .}} K21 .} K22 .} 23}

tcltest::test callback-2.0 {
	callback, +=S
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 0
	}
	conf::load_from_str -hd . -cb confcb "k1=\[k2 v2 k4 v4\] k1.k4+=v44"
} -result {{k1 {k4 v44}} {k1 {k4 .}} {{k1 =L {k2 v2 k4 v4}} {{k1 k4} +=S v44}}}

tcltest::test callback-2.0.1 {
	callback, +=S, ret 1
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 1
	}
	conf::load_from_str -hd . -cb confcb "k1=\[k2 v2 k4 v4\] k1.k4+=v44"
} -result {{} {} {{k1 =L {k2 v2 k4 v4}} {{k1 k4} +=S v44}}}

tcltest::test callback-2.1 {
	callback, +=S
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 0
	}
	conf::load_from_str -hd . -cb confcb "k1 {k2=v2 k3=v3} k1.k4+=v4"
} -result {{k1 {k2 v2 k3 v3 k4 v4}} {k1 {k2 . k3 . k4 .}} {{{k1 k2} =S v2} {{k1 k3} =S v3} {{k1 k4} +=S v4}}}

tcltest::test callback-2.2 {
	callback, +=S
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 0
	}
	conf::load_from_str -hd . -cb confcb "k1 {k2=v2 k3=v3} k1.k2+=v4"
} -result {{k1 {k2 {v2 v4} k3 v3}} {k1 {k2 . k3 .}} {{{k1 k2} =S v2} {{k1 k3} =S v3} {{k1 k2} +=S v4}}}

tcltest::test callback-2.3 {
	callback, +=S
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 0
	}
	conf::load_from_str -hd . -cb confcb "k1 {k2=v2 k3=v3} k1+=v4"
} -result {{k1 v4} {k1 .} {{{k1 k2} =S v2} {{k1 k3} =S v3} {k1 +=S v4}}}

tcltest::test callback-2.4 {
	callback, +=L
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 0
	}
	conf::load_from_str -cb confcb "k1=v1
	k1 += \[v7 v71 v72\]
	k1 += v8"
} -result {{k1 {v1 v7 v71 v72 v8}} {k1 .} {{k1 =S v1} {k1 +=L {v7 v71 v72}} {k1 +=S v8}}}

tcltest::test callback-2.4.1 {
	callback, +=L, ret 1
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 1
	}
	conf::load_from_str -cb confcb "k1=v1
	k1 += \[v7 v71 v72\]
	k1 += v8"
} -result {{} {} {{k1 =S v1} {k1 +=L {v7 v71 v72}} {k1 +=S v8}}}

tcltest::test callback-3.0 {
	callback, ?=S
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 0
	}
	conf::load_from_str -hd . -cb confcb "k1=\[k2 v2 k4 v4\] k1.k4?=v44"
} -result {{k1 {k2 v2 k4 v4}} {k1 .} {{k1 =L {k2 v2 k4 v4}} {{k1 k4} ?=S v44}}}

tcltest::test callback-3.0.1 {
	callback, ?=S, ret 1
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 1
	}
	conf::load_from_str -hd . -cb confcb "k1=\[k2 v2 k4 v4\] k1.k4?=v44"
} -result {{} {} {{k1 =L {k2 v2 k4 v4}} {{k1 k4} ?=S v44}}}

tcltest::test callback-3.1 {
	callback, ?=S
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 0
	}
	conf::load_from_str -hd . -cb confcb "k1=\"k2 v2 k4 v4\" k1.k4?=v44"
} -result {{k1 {{k2 v2 k4 v4}}} {k1 .} {{k1 =S {{k2 v2 k4 v4}}} {{k1 k4} ?=S v44}}}

tcltest::test callback-3.2 {
	callback, ?=S
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 0
	}
	conf::load_from_str -hd . -cb confcb "k1 {k2=v2 k3=v3} k1.k4?=v4"
} -result {{k1 {k2 v2 k3 v3 k4 v4}} {k1 {k2 . k3 . k4 .}} {{{k1 k2} =S v2} {{k1 k3} =S v3} {{k1 k4} ?=S v4}}}

tcltest::test callback-3.3 {
	callback, ?=S
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 0
	}
	conf::load_from_str -hd . -cb confcb "k1 {k2=v2 k3=v3} k1.k2?=v4"
} -result {{k1 {k2 v2 k3 v3}} {k1 {k2 . k3 .}} {{{k1 k2} =S v2} {{k1 k3} =S v3} {{k1 k2} ?=S v4}}}

tcltest::test callback-3.4 {
	callback, ?=S
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 0
	}
	conf::load_from_str -hd . -cb confcb "k1 {k2=v2 k3=v3} k1 ?= v4"
} -result {{k1 {k2 v2 k3 v3}} {k1 {k2 . k3 .}} {{{k1 k2} =S v2} {{k1 k3} =S v3} {k1 ?=S v4}}}

tcltest::test callback-3.5 {
	callback, ?=L
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 0
	}
	conf::load_from_str -hd . -cb confcb "k1=\[k2 v2 k4 v4\] k1.k4?=\[v44 v45\]"
} -result {{k1 {k2 v2 k4 v4}} {k1 .} {{k1 =L {k2 v2 k4 v4}} {{k1 k4} ?=L {v44 v45}}}}

tcltest::test callback-3.6 {
	callback, ?=L, ret 1
} -body {
	proc confcb {_ctx _conf op _names _vlist} {
		upvar $_ctx ctx
		upvar $_names names
		upvar $_vlist vlist
		dict lappend ctx priv [list $names $op $vlist]
		return 1
	}
	conf::load_from_str -hd . -cb confcb "k1=\[k2 v2 k4 v4\] k1.k4?=\[v44 v45\]"
} -result {{} {} {{k1 =L {k2 v2 k4 v4}} {{k1 k4} ?=L {v44 v45}}}}

tcltest::cleanupTests
